esphome:
  name: test-neopixel-strip-1

substitutions:
  device_name: test-neopixel-strip-1
  update_interval: 30s

esp8266:
  board: esp01_1m

# Wifi Config
wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
    #hidden: true
  fast_connect: true
  # ...
  ap:
    ssid: "Test-Neopixel-1 Fallback Hotspot"
    password: "Y1eGuLfEvzzT"
  # Optional manual IP
  manual_ip:
    static_ip: 192.168.37.22
    gateway: 192.168.37.1
    subnet: 255.255.255.128
    dns1: 192.168.37.1
    dns2: 8.8.8.8

captive_portal:

light:
  - platform: neopixelbus
    variant: ws2812
    pin: GPIO5
    num_leds: 8
    type: grb
    name: test_strip
    id: test_strip
    
  - platform: partition
    name: "${device_name}_status_led_1"
    id: section1
    segments:
      - id: test_strip
        from: 0
        to: 0
  - platform: partition
    name: "${device_name}_status_led_2"
    id: section2
    segments:
      - id: test_strip
        from: 1
        to: 1
  - platform: partition
    name: "${device_name}_status_led_3"
    id: section3
    segments:
      - id: test_strip
        from: 2
        to: 2
  - platform: partition
    name: "${device_name}_status_led_4"
    id: section4
    segments:
      - id: test_strip
        from: 3
        to: 3        
  - platform: partition
    name: "${device_name}_status_led_5"
    id: section5
    segments:
      - id: test_strip
        from: 4
        to: 4
  - platform: partition
    name: "${device_name}_status_led_6"
    id: section6
    segments:
      - id: test_strip
        from: 5
        to: 5
  - platform: partition
    name: "${device_name}_status_led_7"
    id: section7
    segments:
      - id: test_strip
        from: 6
        to: 6
  - platform: partition
    name: "${device_name}_status_led_8"
    id: section8
    segments:
      - id: test_strip
        from: 7
        to: 7 


#  - platform: partition
#    name: "status_led_rest"
#    id: section_rest
#    segments:
#      - id: test_strip
#        from: 2
#        to: 7

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "3fc59166056b9411dd6e70b35c21bea0"

# Example configuration entry
web_server:
  port: 80
  
sensor:
  - platform: wifi_signal
    name: ${device_name} Sensor Wifi Signal
    update_interval: ${update_interval}  
  
  - platform: uptime
    name: ${device_name} Sensor Uptime
    id: uptime_sensor
    update_interval: ${update_interval}
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();

## Use time
time:
  - platform: homeassistant
    ## Set your timezone
    timezone: Europe/Dublin

switch:
  - platform: restart
    name: ${device_name}_restart

# Text sensors with general information
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${device_name}_ip
    ssid:
      name: ${device_name}_ssid
    bssid:
      name: ${device_name}_bssid
  - platform: version
    name: ${device_name}_epshomeversion
  - platform: template
    name: ${device_name} Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start